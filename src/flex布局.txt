.container {
    display: flex | inline-flex;       //可以有两种取值
}


需要注意的是：当时设置 flex 布局之后，子元素的 float、clear、vertical-align 的属性将会失效。

有下面六种属性可以设置在容器上，它们分别是：

flex-direction
flex-wrap
flex-flow
justify-content
align-items
align-content


1. flex-direction: 决定主轴的方向(即项目的排列方向)
默认值：row，主轴为水平方向，起点在左端。
.container {
    flex-direction: row | row-reverse | column | column-reverse;
}

2. flex-wrap: 决定容器内项目是否可换行
默认值：nowrap 不换行，即当主轴尺寸固定时，当空间不足时，项目尺寸会随之调整而并不会挤到下一行。
.container {
    flex-wrap: nowrap | wrap | wrap-reverse;
}

4. justify-content：定义了项目在主轴的对齐方式。
.container {
    justify-content: flex-start | flex-end | center | space-between | space-around;
}

5. align-items: 定义了项目在交叉轴上的对齐方式
.container {
    align-items: flex-start | flex-end | center | baseline | stretch;
}
建立在主轴为水平方向时测试，即 flex-direction: row
默认值为 stretch 即如果项目未设置高度或者设为 auto，将占满整个容器的高度。

6. align-content: 定义了多根轴线的对齐方式，如果项目只有一根轴线，那么该属性将不起作用
当你 flex-wrap 设置为 nowrap 的时候，容器仅存在一根轴线，因为项目不会换行，就不会产生多条轴线。
.container {
    align-content: flex-start | flex-end | center | space-between | space-around | stretch;
}