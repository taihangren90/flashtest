来源：
SASS用法指南----->http://www.ruanyifeng.com/blog/2012/06/sass.html


SASS是Ruby语言写的，但是两者的语法没有关系。不懂Ruby，照样使用。只是必须先安装Ruby，然后再安装SASS。
定你已经安装好了Ruby，接着在命令行输入下面的命令：
　　gem install sass

如果要将显示结果保存成文件，后面再跟一个.css文件名。
　　sass test.scss test.css
SASS提供四个编译风格的选项：
　　* nested：嵌套缩进的css代码，它是默认值。
　　* expanded：没有缩进的、扩展的css代码。
　　* compact：简洁格式的css代码。
　　* compressed：压缩后的css代码。
生产环境当中，一般使用最后一个选项。
　　sass --style compressed test.sass test.css
你也可以让SASS监听某个文件或目录，一旦源文件有变动，就自动生成编译后的版本。
　　// watch a file
　　sass --watch input.scss:output.css
　　// watch a directory
　　sass --watch app/sass:public/stylesheets


SASS的官方网站，提供了一个在线转换器---->http://sass-lang.com/try.html

1:变量以$开头；
$blue : #1875e7;　
　　div {
　　　color : $blue;
　　}
2:计算功能：
　body {
　　　　margin: (14px/2);
　　　　top: 50px + 100px;
　　　　right: $var * 10%;
　　}
3:注释
标准的CSS注释 /* comment */ ，会保留到编译后的文件。
单行注释 // comment，只保留在SASS源文件中，编译后被省略。
在/*后面加一个感叹号，表示这是"重要注释"。即使是压缩模式编译，也会保留这行注释，通常可以用于声明版权信息。
　　/*! 
　　　　重要注释！
　　*/
4：继承　@extend
　.class1 {
　　　　border: 1px solid #ddd;
　　}

.class2 {
　　　　@extend .class1;
　　　　font-size:120%;
　　}
5：@mixin @include
@mixin left {
　　　　float: left;
　　　　margin-left: 10px;
　　}
div {
　　　　@include left;
　　}


@mixin left($value: 10px) {
　　　　float: left;
　　　　margin-right: $value;
　　}
div {
　　　　@include left(20px);
　　}
6：插入文件@import
　@import "path/filename.scss";

7：条件语句@if @else

　@if lightness($color) > 30% {
　　　　background-color: #000;
　　} @else {
　　　　background-color: #fff;
　　}
8:循环语句：
　@for $i from 1 to 10 {
　　　　.border-#{$i} {
　　　　　　border: #{$i}px solid blue;
　　　　}
　　}

$i: 6;
　　@while $i > 0 {
　　　　.item-#{$i} { width: 2em * $i; }
　　　　$i: $i - 2;
　　}

@each $member in a, b, c, d {
　　　　.#{$member} {
　　　　　　background-image: url("/image/#{$member}.jpg");
　　　　}
　　}

9：自定义函数
@function double($n) {
　　　　@return $n * 2;
　　}
　　#sidebar {
　　　　width: double(5px);
　　}


